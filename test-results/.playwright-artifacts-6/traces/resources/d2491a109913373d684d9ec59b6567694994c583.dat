import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/.svelte-kit/generated/root.svelte");import "/node_modules/.vite/deps/svelte_internal_disclose-version.js?v=f8e19137";

Root[$.FILENAME] = '.svelte-kit/generated/root.svelte';

import * as $ from "/node_modules/.vite/deps/svelte_internal_client.js?v=f8e19137";
import { setContext, onMount, tick } from "/node_modules/.vite/deps/svelte.js?v=f8e19137";
import { browser } from "/node_modules/@sveltejs/kit/src/runtime/app/environment/index.js?v=f8e19137";

var root_4 = $.add_locations($.from_html(`<div id="svelte-announcer" aria-live="assertive" aria-atomic="true" style="position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px"><!></div>`), Root[$.FILENAME], [[61, 1]]);
var root = $.add_locations($.from_html(`<!> <!>`, 1), Root[$.FILENAME], []);

function Root($$anchor, $$props) {
	$.check_target(new.target);
	$.push($$props, true, Root);

	var $$ownership_validator = $.create_ownership_validator($$props);

	// stores
	let components = $.prop($$props, 'components', 23, () => []),
		data_0 = $.prop($$props, 'data_0', 3, null),
		data_1 = $.prop($$props, 'data_1', 3, null);

	if (!browser) {
		setContext('__svelte__', $$props.stores);
	}

	if (browser) {
		$.user_pre_effect(() => $$props.stores.page.set($$props.page));
	} else {
		$$props.stores.page.set($$props.page);
	}

	$.user_effect(() => {
		$$props.stores;
		$$props.page;
		$$props.constructors;
		components();
		$$props.form;
		data_0();
		data_1();
		$$props.stores.page.notify();
	});

	let mounted = $.tag($.state(false), 'mounted');
	let navigated = $.tag($.state(false), 'navigated');
	let title = $.tag($.state(null), 'title');

	onMount(() => {
		const unsubscribe = $$props.stores.page.subscribe(() => {
			if ($.get(mounted)) {
				$.set(navigated, true);

				tick().then(() => {
					$.set(title, document.title || 'untitled page', true);
				});
			}
		});

		$.set(mounted, true);

		return unsubscribe;
	});

	const Pyramid_1 = $.tag($.derived(() => $$props.constructors[1]), 'Pyramid_1');
	var $$exports = { ...$.legacy_api() };
	var fragment = root();
	var node = $.first_child(fragment);

	{
		var consequent = ($$anchor) => {
			const Pyramid_0 = $.tag($.derived(() => $$props.constructors[0]), 'Pyramid_0');

			$.get(Pyramid_0);

			var fragment_1 = $.comment();
			var node_1 = $.first_child(fragment_1);

			$.add_svelte_meta(
				() => $.component(node_1, () => $.get(Pyramid_0), ($$anchor, Pyramid_0_1) => {
					$.bind_this(
						Pyramid_0_1($$anchor, {
							get data() {
								return data_0();
							},

							get form() {
								return $$props.form;
							},

							get params() {
								return $$props.page.params;
							},

							children: $.wrap_snippet(Root, ($$anchor, $$slotProps) => {
								var fragment_2 = $.comment();
								var node_2 = $.first_child(fragment_2);

								$.add_svelte_meta(
									() => $.component(node_2, () => $.get(Pyramid_1), ($$anchor, Pyramid_1_1) => {
										$.bind_this(
											Pyramid_1_1($$anchor, {
												get data() {
													return data_1();
												},

												get form() {
													return $$props.form;
												},

												get params() {
													return $$props.page.params;
												}
											}),
											($$value) => $$ownership_validator.mutation('components', ['components', 1], components()[1] = $$value, 50, 32),
											() => components()?.[1]
										);
									}),
									'component',
									Root,
									50,
									10,
									{ componentTag: 'Pyramid_1' }
								);

								$.append($$anchor, fragment_2);
							}),

							$$slots: { default: true }
						}),
						($$value) => $$ownership_validator.mutation('components', ['components', 0], components()[0] = $$value, 48, 29),
						() => components()?.[0]
					);
				}),
				'component',
				Root,
				48,
				7,
				{ componentTag: 'Pyramid_0' }
			);

			$.append($$anchor, fragment_1);
		};

		var alternate = ($$anchor) => {
			const Pyramid_0 = $.tag($.derived(() => $$props.constructors[0]), 'Pyramid_0');

			$.get(Pyramid_0);

			var fragment_3 = $.comment();
			var node_3 = $.first_child(fragment_3);

			$.add_svelte_meta(
				() => $.component(node_3, () => $.get(Pyramid_0), ($$anchor, Pyramid_0_2) => {
					$.bind_this(
						Pyramid_0_2($$anchor, {
							get data() {
								return data_0();
							},

							get form() {
								return $$props.form;
							},

							get params() {
								return $$props.page.params;
							}
						}),
						($$value) => $$ownership_validator.mutation('components', ['components', 0], components()[0] = $$value, 56, 23),
						() => components()?.[0]
					);
				}),
				'component',
				Root,
				56,
				1,
				{ componentTag: 'Pyramid_0' }
			);

			$.append($$anchor, fragment_3);
		};

		$.add_svelte_meta(
			() => $.if(node, ($$render) => {
				if ($$props.constructors[1]) $$render(consequent); else $$render(alternate, false);
			}),
			'if',
			Root,
			45,
			0
		);
	}

	var node_4 = $.sibling(node, 2);

	{
		var consequent_2 = ($$anchor) => {
			var div = root_4();
			var node_5 = $.child(div);

			{
				var consequent_1 = ($$anchor) => {
					var text = $.text();

					$.template_effect(() => $.set_text(text, $.get(title)));
					$.append($$anchor, text);
				};

				$.add_svelte_meta(
					() => $.if(node_5, ($$render) => {
						if ($.get(navigated)) $$render(consequent_1);
					}),
					'if',
					Root,
					62,
					2
				);
			}

			$.reset(div);
			$.append($$anchor, div);
		};

		$.add_svelte_meta(
			() => $.if(node_4, ($$render) => {
				if ($.get(mounted)) $$render(consequent_2);
			}),
			'if',
			Root,
			60,
			0
		);
	}

	$.append($$anchor, fragment);

	return $.pop($$exports);
}

if (import.meta.hot) {
	Root = $.hmr(Root, () => Root[$.HMR].source);

	import.meta.hot.acceptExports(["default"],(module) => {
		module.default[$.HMR].source = Root[$.HMR].source;
		$.set(Root[$.HMR].source, module.default[$.HMR].original);
	});
}

export default Root;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7U0FHVSxVQUFVLEVBQUUsT0FBTyxFQUFFLElBQUksUUFBUSxRQUFRO1NBQ3pDLE9BQU8sUUFBUSxrQkFBa0I7Ozs7O2lDQUozQyxDQUFDOzs7Ozs7O0tBT2tDLFVBQVU7RUFBYSxNQUFNLGdDQUFHLElBQUk7RUFBRSxNQUFNLGdDQUFHLElBQUk7O01BRWhGLE9BQU8sRUFBRTtFQUNiLFVBQVUsQ0FBQyxZQUFZO0NBQ3hCOztLQUVJLE9BQU8sRUFBRTtFQUNaLGlCQUFXLHNCQUFjLElBQUksQ0FBQyxHQUFHO0NBQ2xDLENBQUMsTUFBTTtpQkFDQyxJQUFJLENBQUMsR0FBRztDQUNoQjs7Q0FDQSxhQUFPLE9BQU87Ozs7RUFDWSxVQUFVOztFQUFNLE1BQU07RUFBQyxNQUFNO2lCQUMvQyxJQUFJLENBQUMsTUFBTTtDQUNuQixDQUFDOztLQUVHLE9BQU8saUJBQVUsS0FBSztLQUN0QixTQUFTLGlCQUFVLEtBQUs7S0FDeEIsS0FBSyxpQkFBVSxJQUFJOztDQUV2QixPQUFPLE9BQU87UUFDUCxXQUFXLGtCQUFVLElBQUksQ0FBQyxTQUFTLE9BQU87YUFDM0MsT0FBTyxHQUFFO1VBQ1osU0FBUyxFQUFHLElBQUk7O0lBQ2hCLElBQUksR0FBRyxJQUFJLE9BQU87V0FDakIsS0FBSyxFQUFHLFFBQVEsQ0FBQyxLQUFLLElBQUksZUFBZTtJQUMxQyxDQUFDO0dBQ0Y7RUFDRCxDQUFDOztRQUVELE9BQU8sRUFBRyxJQUFJOztTQUNQLFdBQVc7Q0FDbkIsQ0FBQzs7T0FFSyxTQUFTLDhDQUF1QixDQUFDOzs7Ozs7O1NBSS9CLFNBQVMsOENBQWdCLENBQUM7O1NBQTFCLFNBQVM7Ozs7Ozs7Ozs7ZUFFZ0MsTUFBTTs7Ozs7Ozs7NEJBQXNCLE1BQU07Ozs7Ozs7Ozs7OztvQkFFL0IsTUFBTTs7Ozs7Ozs7aUNBQXNCLE1BQU07OztvRkFBNUMsQ0FBQyxHQUFaLFVBQVUsR0FBQyxDQUFDO2lCQUFaLFVBQVUsS0FBQyxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7K0VBRkosQ0FBQyxHQUFaLFVBQVUsR0FBQyxDQUFDO1lBQVosVUFBVSxLQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7O1NBTWhDLFNBQVMsOENBQWdCLENBQUM7O1NBQTFCLFNBQVM7Ozs7Ozs7Ozs7ZUFFMEIsTUFBTTs7Ozs7Ozs7NEJBQXNCLE1BQU07OzsrRUFBNUMsQ0FBQyxHQUFaLFVBQVUsR0FBQyxDQUFDO1lBQVosVUFBVSxLQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs2QkFYakIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0RBa0JmLEtBQUs7Ozs7OztnQkFERixTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Y0FGWCxPQUFPOzs7Ozs7Ozs7Ozs7Q0FqQloiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbInJvb3Quc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjwhLS0gVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBAc3ZlbHRlanMva2l0IOKAlCBkbyBub3QgZWRpdCBpdCEgLS0+XG48c3ZlbHRlOm9wdGlvbnMgcnVuZXM9e3RydWV9IC8+XG48c2NyaXB0PlxuXHRpbXBvcnQgeyBzZXRDb250ZXh0LCBvbk1vdW50LCB0aWNrIH0gZnJvbSAnc3ZlbHRlJztcblx0aW1wb3J0IHsgYnJvd3NlciB9IGZyb20gJyRhcHAvZW52aXJvbm1lbnQnO1xuXG5cdC8vIHN0b3Jlc1xuXHRsZXQgeyBzdG9yZXMsIHBhZ2UsIGNvbnN0cnVjdG9ycywgY29tcG9uZW50cyA9IFtdLCBmb3JtLCBkYXRhXzAgPSBudWxsLCBkYXRhXzEgPSBudWxsIH0gPSAkcHJvcHMoKTtcblxuXHRpZiAoIWJyb3dzZXIpIHtcblx0XHRzZXRDb250ZXh0KCdfX3N2ZWx0ZV9fJywgc3RvcmVzKTtcblx0fVxuXG5cdGlmIChicm93c2VyKSB7XG5cdFx0JGVmZmVjdC5wcmUoKCkgPT4gc3RvcmVzLnBhZ2Uuc2V0KHBhZ2UpKTtcblx0fSBlbHNlIHtcblx0XHRzdG9yZXMucGFnZS5zZXQocGFnZSk7XG5cdH1cblx0JGVmZmVjdCgoKSA9PiB7XG5cdFx0c3RvcmVzO3BhZ2U7Y29uc3RydWN0b3JzO2NvbXBvbmVudHM7Zm9ybTtkYXRhXzA7ZGF0YV8xO1xuXHRcdHN0b3Jlcy5wYWdlLm5vdGlmeSgpO1xuXHR9KTtcblxuXHRsZXQgbW91bnRlZCA9ICRzdGF0ZShmYWxzZSk7XG5cdGxldCBuYXZpZ2F0ZWQgPSAkc3RhdGUoZmFsc2UpO1xuXHRsZXQgdGl0bGUgPSAkc3RhdGUobnVsbCk7XG5cblx0b25Nb3VudCgoKSA9PiB7XG5cdFx0Y29uc3QgdW5zdWJzY3JpYmUgPSBzdG9yZXMucGFnZS5zdWJzY3JpYmUoKCkgPT4ge1xuXHRcdFx0aWYgKG1vdW50ZWQpIHtcblx0XHRcdFx0bmF2aWdhdGVkID0gdHJ1ZTtcblx0XHRcdFx0dGljaygpLnRoZW4oKCkgPT4ge1xuXHRcdFx0XHRcdHRpdGxlID0gZG9jdW1lbnQudGl0bGUgfHwgJ3VudGl0bGVkIHBhZ2UnO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdG1vdW50ZWQgPSB0cnVlO1xuXHRcdHJldHVybiB1bnN1YnNjcmliZTtcblx0fSk7XG5cblx0Y29uc3QgUHlyYW1pZF8xPSRkZXJpdmVkKGNvbnN0cnVjdG9yc1sxXSlcbjwvc2NyaXB0PlxuXG57I2lmIGNvbnN0cnVjdG9yc1sxXX1cblx0e0Bjb25zdCBQeXJhbWlkXzAgPSBjb25zdHJ1Y3RvcnNbMF19XG5cdFx0XHRcdFx0XHRcdDwhLS0gc3ZlbHRlLWlnbm9yZSBiaW5kaW5nX3Byb3BlcnR5X25vbl9yZWFjdGl2ZSAtLT5cblx0XHRcdFx0XHRcdFx0PFB5cmFtaWRfMCBiaW5kOnRoaXM9e2NvbXBvbmVudHNbMF19IGRhdGE9e2RhdGFfMH0ge2Zvcm19IHBhcmFtcz17cGFnZS5wYXJhbXN9PlxuXHRcdFx0XHRcdFx0XHRcdDwhLS0gc3ZlbHRlLWlnbm9yZSBiaW5kaW5nX3Byb3BlcnR5X25vbl9yZWFjdGl2ZSAtLT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PFB5cmFtaWRfMSBiaW5kOnRoaXM9e2NvbXBvbmVudHNbMV19IGRhdGE9e2RhdGFfMX0ge2Zvcm19IHBhcmFtcz17cGFnZS5wYXJhbXN9IC8+XG5cdFx0XHRcdFx0XHRcdDwvUHlyYW1pZF8wPlxuXG57OmVsc2V9XG5cdHtAY29uc3QgUHlyYW1pZF8wID0gY29uc3RydWN0b3JzWzBdfVxuXHQ8IS0tIHN2ZWx0ZS1pZ25vcmUgYmluZGluZ19wcm9wZXJ0eV9ub25fcmVhY3RpdmUgLS0+XG5cdDxQeXJhbWlkXzAgYmluZDp0aGlzPXtjb21wb25lbnRzWzBdfSBkYXRhPXtkYXRhXzB9IHtmb3JtfSBwYXJhbXM9e3BhZ2UucGFyYW1zfSAvPlxuXG57L2lmfVxuXG57I2lmIG1vdW50ZWR9XG5cdDxkaXYgaWQ9XCJzdmVsdGUtYW5ub3VuY2VyXCIgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCIgYXJpYS1hdG9taWM9XCJ0cnVlXCIgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IGxlZnQ6IDA7IHRvcDogMDsgY2xpcDogcmVjdCgwIDAgMCAwKTsgY2xpcC1wYXRoOiBpbnNldCg1MCUpOyBvdmVyZmxvdzogaGlkZGVuOyB3aGl0ZS1zcGFjZTogbm93cmFwOyB3aWR0aDogMXB4OyBoZWlnaHQ6IDFweFwiPlxuXHRcdHsjaWYgbmF2aWdhdGVkfVxuXHRcdFx0e3RpdGxlfVxuXHRcdHsvaWZ9XG5cdDwvZGl2Plxuey9pZn0iXSwiZmlsZSI6Ii9Vc2Vycy9lcmlrb3IvY29keXgvLnN2ZWx0ZS1raXQvZ2VuZXJhdGVkL3Jvb3Quc3ZlbHRlIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzBdfQ==