import { createHotContext as __vite__createHotContext } from "/@vite/client";import.meta.hot = __vite__createHotContext("/src/routes/+layout.svelte");import "/node_modules/.vite/deps/svelte_internal_disclose-version.js?v=f8e19137";

_layout[$.FILENAME] = 'src/routes/+layout.svelte';

import * as $ from "/node_modules/.vite/deps/svelte_internal_client.js?v=f8e19137";
import { onMount, onDestroy } from "/node_modules/.vite/deps/svelte.js?v=f8e19137";
import favicon from "/src/lib/assets/favicon.png?import";
import "/src/assets/codyx-style.css";
import { pyodideService } from "/src/lib/classes/pyodide-service.js";
import webRService from "/src/lib/classes/webr-service.js";

var root_1 = $.add_locations($.from_html(`<link rel="icon" class="s-7IPF32Wcq3s8"/> <link rel="preconnect" href="https://fonts.googleapis.com" class="s-7IPF32Wcq3s8"/> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="" class="s-7IPF32Wcq3s8"/> <link href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&amp;display=swap" rel="stylesheet" class="s-7IPF32Wcq3s8"/>`, 1), _layout[$.FILENAME], [[40, 4], [41, 4], [42, 4], [43, 4]]);
var on_click = () => window.dispatchEvent(new CustomEvent('createNewNotebook'));

var root = $.add_locations(
	$.from_html(
		`<header class="app-header s-7IPF32Wcq3s8"><div class="header-content s-7IPF32Wcq3s8"><div class="logo-section s-7IPF32Wcq3s8"><img src="/logo_200.png" alt="CODYX Logo" class="logo s-7IPF32Wcq3s8"/> <div class="brand-info s-7IPF32Wcq3s8"><h1 class="app-name s-7IPF32Wcq3s8">CODYX</h1> <div class="tagline s-7IPF32Wcq3s8">Collaborative Learning and Research Tools • No Logins Required</div></div></div> <div class="header-actions s-7IPF32Wcq3s8"><button class="new-notebook-btn s-7IPF32Wcq3s8"><span class="material-symbols-outlined s-7IPF32Wcq3s8">add</span> New Notebook</button></div></div></header> <main class="app-container s-7IPF32Wcq3s8"><!></main> <footer class="app-footer s-7IPF32Wcq3s8">© 2025 Eric J. Kort. License: <a href="https://mit-license.org/" target="_blank" rel="noopener" class="s-7IPF32Wcq3s8">&nbsp;MIT</a>. 
    Bugs? Suggestions? Open an issue on <a href="https://github.com/ejkreboot/codyx" target="_blank" rel="noopener" class="s-7IPF32Wcq3s8">&nbsp;GitHub</a>. 
	Created with lots of help from <a href="https://www.anthropic.com/claude/sonnet" target="_blank" rel="noopener" class="s-7IPF32Wcq3s8">&nbsp;Claude Sonnet 4</a>.</footer>`,
		1
	),
	_layout[$.FILENAME],
	[
		[
			46,
			0,

			[
				[
					47,
					4,

					[
						[48, 8, [[49, 12], [50, 12, [[51, 16], [52, 16]]]]],
						[57, 8, [[58, 12, [[59, 16]]]]]
					]
				]
			]
		],

		[65, 0],
		[69, 0, [[70, 34], [71, 40], [72, 32]]]
	]
);

function _layout($$anchor, $$props) {
	$.check_target(new.target);
	$.push($$props, true, _layout);

	// Global cleanup to prevent memory leaks
	onMount(() => {
		const handleBeforeUnload = async () => {
			try {
				(await $.track_reactivity_loss(pyodideService.cleanup()))();
				(await $.track_reactivity_loss(webRService.cleanup()))();
			} catch(error) {
				console.log(...$.log_if_contains_state('log', '⚠️ Cleanup error:', error));
			}
		};

		window.addEventListener('beforeunload', handleBeforeUnload);

		return () => {
			window.removeEventListener('beforeunload', handleBeforeUnload);
		};
	});

	onDestroy(async () => {
		try {
			(await $.track_reactivity_loss(pyodideService.cleanup()))();
			(await $.track_reactivity_loss(webRService.cleanup()))();
		} catch(error) {
			console.log(...$.log_if_contains_state('log', '⚠️ Layout cleanup error:', error));
		}
	});

	var $$exports = { ...$.legacy_api() };
	var fragment_1 = root();

	$.head(($$anchor) => {
		var fragment = root_1();
		var link = $.first_child(fragment);

		$.next(6);
		$.template_effect(() => $.set_attribute(link, 'href', favicon));
		$.append($$anchor, fragment);
	});

	var header = $.first_child(fragment_1);
	var div = $.child(header);
	var div_1 = $.sibling($.child(div), 2);
	var button = $.child(div_1);

	button.__click = [on_click];
	$.reset(div_1);
	$.reset(div);
	$.reset(header);

	var main = $.sibling(header, 2);
	var node = $.child(main);

	$.add_svelte_meta(() => $.snippet(node, () => $$props.children ?? $.noop), 'render', _layout, 66, 4);
	$.reset(main);
	$.next(2);
	$.append($$anchor, fragment_1);

	return $.pop($$exports);
}

if (import.meta.hot) {
	_layout = $.hmr(_layout, () => _layout[$.HMR].source);

	import.meta.hot.acceptExports(["default"],(module) => {
		$.cleanup_styles('s-7IPF32Wcq3s8');
		module.default[$.HMR].source = _layout[$.HMR].source;
		$.set(_layout[$.HMR].source, module.default[$.HMR].original);
	});
}

export default _layout;

$.delegate(['click']);
import "/src/routes/+layout.svelte?svelte&type=style&lang.css";

//# sourceMappingURL=data:application/json;base64,